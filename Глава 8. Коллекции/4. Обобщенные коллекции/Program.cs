namespace _4.Обобщенные_коллекции
{
    class Program
    {
        static void Main(string[] args)
        {
            /*
             * IEnumerable<T>: определяет метод GetEnumerator, с помощью которого можно получать элементы любой коллекции
             * . Реализация данного интерфейса позволяет перебирать элементы коллекции с помощью цикла foreach
             * IEnumerator<T>: определяет методы, с помощью которых потом можно получить содержимое коллекции по очереди
             * ICollection<T>: представляет ряд общих свойств и методов для всех обобщенных коллекций(например, методы CopyTo, Add, Remove, Contains, свойство Count)
             * IList<T>: предоставляет функционал для создания последовательных списков
             * IComparer<T>: определяет метод Compare для сравнения двух однотипных объектов
             * IDictionary<TKey, TValue>: определяет поведение коллекции, при котором она должна хранить объекты в виде пар ключ-значение: для каждого
             * объекта определяется уникальный ключ типа, указанного в параметре TKey, и этому ключу соответствует определенное значение, имеющее тип, указанный в параметре TValue
             * IEqualityComparer<T>: определяет методы, с помощью которых два однотипных объекта сравниваются на предмет равенства
             */
            /*
             * List<T>: класс, представляющий последовательный список.Реализует интерфейсы IList<T>, ICollection<T>, IEnumerable<T>
             * Dictionary<TKey, TValue>: класс коллекции, хранящей наборы пар "ключ-значение".Реализует интерфейсы ICollection<T>, IEnumerable<T>, IDictionary<TKey, TValue>
             * LinkedList< T >: класс двухсвязанного списка.Реализует интерфейсы ICollection<T> и IEnumerable<T>
             * Queue<T>: класс очереди объектов, работающей по алгоритму FIFO("первый вошел -первый вышел"). Реализует интерфейсы ICollection, IEnumerable<T>
             * SortedSet<T>: класс отсортированной коллекции однотипных объектов.Реализует интерфейсы ICollection<T>, ISet<T>, IEnumerable<T>
             * SortedList<TKey, TValue>: класс коллекции, хранящей наборы пар "ключ-значение", отсортированных по ключу.Реализует интерфейсы ICollection<T>, IEnumerable<T>, IDictionary<TKey, TValue>
             * SortedDictionary<TKey, TValue>: класс коллекции, хранящей наборы пар "ключ-значение", отсортированных по ключу.
             * В общем похож на класс SortedList<TKey, TValue>, основные отличия состоят лишь в использовании памяти и в скорости вставки и удаления
             * Stack< T >: класс стека однотипных объектов. Реализует интерфейсы ICollection<T> и IEnumerable<T>
             */
        }
    }
}
