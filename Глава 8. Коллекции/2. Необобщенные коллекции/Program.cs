namespace _2.Необобщенные_коллекции
{
    class Program
    {
        static void Main(string[] args)
        {
            /*
             * Рассмотрим основные интерфейсы:
             * IEnumerable: определяет метод GetEnumerator.Данный метод возвращает перечислитель -то есть некоторый объект, реализующий интерфейс IEnumerator.
             * IEnumerator: реализация данного интерфейса позволяет перебирать элементы коллекции с помощью цикла foreach
             * ICollection: является основой для всех необобщенных коллекций, определяет основные методы и свойства для всех необобщенных коллекций(например, метод CopyTo и свойство Count). Данный интерфейс унаследован от интерфейса IEnumerable, благодаря чему базовый интерфейс также реализуется всеми классами необобщенных коллекций
             * IList: позволяет получать элементы коллекции по порядку. Также определяет ряд методов для манипуляции элементами: Add(добавление элементов), Remove / RemoveAt(удаление элемента) и ряд других.
             * IComparer: определяет метод int Compare(object x, object y) для сравнения двух объектов
             * IDictionary: определяет поведение коллекции, при котором она должна хранить объекты в виде пар ключ-значение: для каждого объекта определяется уникальный ключ, и этому ключу соответствует определенное значение
             * IDictionaryEnumerator: определяет методы и свойства для перечислителя словаря
             * IEqualityComparer: определяет два метода Equals и GetHashCode, с помощью которых два объекта сравниваются на предмет равенства
             * IStructuralComparer: определяет метод Compare для структурного сравнения двух объектов: при таком сравнении сравниваются не ссылки на объекты, а непосредственное содержимое объектов
             * IStructuralEquatable: позволяет провести структурное равенство двух объектов. Как и в случае с интерфейсом IStructuralComparer сравнивается содержимое двух объектов
             * Эти интерфейсы реализуются следующими классами коллекций в пространстве имен System.Collections:
             * ArrayList: класс простой коллекции объектов. Реализует интерфейсы IList, ICollection, IEnumerable
             * BitArray: класс коллекции, содержащей массив битовых значений.Реализует интерфейсы ICollection, IEnumerable
             * Hashtable: класс коллекции, представляющей хэш - таблицу и храняющий набор пар "ключ-значение"
             * Queue: класс очереди объектов, работающей по алгоритму FIFO("первый вошел -первый вышел"). Реализует интерфейсы ICollection, IEnumerable
             * SortedList: класс коллекции, хранящей наборы пар "ключ-значение", отсортированных по ключу.Реализует интерфейсы ICollection, IDictionary, IEnumerable
             * Stack: класс стека
             */
        }
    }
}
